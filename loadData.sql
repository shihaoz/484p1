DECLARE
	CNT NUMBER;
BEGIN
	FOR REC IN (SELECT * FROM keykholt.PUBLIC_USER_INFORMATION) 
	LOOP
		SELECT COUNT(*) INTO CNT FROM USER_INFO WHERE USER_ID = REC.USER_ID;
		IF (CNT = 0) THEN
			INSERT INTO USER_INFO (USER_ID, FIRST_NAME, LAST_NAME, 
			YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH,GENDER,HOMETOWN_CITY,
			HOMETOWN_STATE,HOMETOWN_COUNTRY,CURRENT_CITY,CURRENT_STATE,CURRENT_COUNTRY) 
			VALUES (REC.USER_ID, REC.FIRST_NAME, REC.LAST_NAME, 
			REC.YEAR_OF_BIRTH,REC.MONTH_OF_BIRTH,REC.DAY_OF_BIRTH,
			REC.GENDER,REC.HOMETOWN_CITY,REC.HOMETOWN_STATE,REC.HOMETOWN_COUNTRY,
			REC.CURRENT_CITY,REC.CURRENT_STATE,REC.CURRENT_COUNTRY);
		END IF;
		INSERT INTO EDUCATION (USER_ID,INSTITUTION_NAME,PROGRAM_YEAR,PROGRAM_CONCENTRATION,
		PROGRAM_DEGREE) VALUES (REC.USER_ID,REC.INSTITUTION_NAME,REC.PROGRAM_YEAR,
		REC.PROGRAM_CONCENTRATION,REC.PROGRAM_DEGREE);
	END LOOP;
	
	FOR REC IN (SELECT * FROM keykholt.PUBLIC_ARE_FRIENDS)
	LOOP
		INSERT INTO FRIEND (USER1_ID, USER2_ID) VALUES (REC.USER1_ID, REC.USER2_ID);
	END LOOP;
	
	INSERT INTO PHOTO (PHOTO_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, 
	PHOTO_MODIFIED_TIME, PHOTO_LINK) SELECT PHOTO_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, 
	PHOTO_MODIFIED_TIME, PHOTO_LINK FROM keykholt.PUBLIC_PHOTO_INFORMATION;
	FOR REC IN (SELECT * FROM keykholt.PUBLIC_PHOTO_INFORMATION)
	LOOP
		SELECT COUNT(*) INTO CNT FROM ALBUM WHERE ALBUM_ID = REC.ALBUM_ID;
		IF (CNT = 0) THEN
			INSERT INTO ALBUM (ALBUM_ID,OWNER_ID,COVER_PHOTO_ID,ALBUM_NAME,AlBUM_CREATED_TIME,
			ALBUM_MODIFIED_TIME,ALBUM_LINK,ALBUM_VISIBILITY) VALUES (REC.ALBUM_ID,
			REC.OWNER_ID,REC.COVER_PHOTO_ID,REC.ALBUM_NAME,REC.AlBUM_CREATED_TIME,
			REC.ALBUM_MODIFIED_TIME,REC.ALBUM_LINK,REC.ALBUM_VISIBILITY) ;
		END IF;
		INSERT INTO CONTAIN (ALBUM_ID, PHOTO_ID) VALUES (REC.ALBUM_ID, REC.PHOTO_ID);
	END LOOP;
	
	INSERT INTO TAG (PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X_COORDINATE, TAG_Y_COORDINATE) 
	SELECT PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X_COORDINATE, TAG_Y_COORDINATE FROM
	keykholt.PUBLIC_TAG_INFORMATION;
	
	INSERT INTO EVENT SELECT * FROM keykholt.PUBLIC_EVENT_INFORMATION;
END;
/
